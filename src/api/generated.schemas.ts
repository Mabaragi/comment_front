/**
 * Generated by orval v7.10.0 🍺
 * Do not edit manually.
 * API Documentation
 * API for my project
 * OpenAPI spec version: v1
 */
export interface Episode {
  /**
   * @minimum -2147483648
   * @maximum 2147483647
   */
  id: number;
  /**
   * @minLength 1
   * @maxLength 100
   */
  name: string;
  /** @minLength 1 */
  image_src: string;
  /**
   * @minLength 1
   * @maxLength 10
   */
  category: string;
  /**
   * @minLength 1
   * @maxLength 20
   */
  subcategory: string;
  series: number;
  user: number;
}

export interface Comment {
  /**
   * @minimum -2147483648
   * @maximum 2147483647
   */
  id: number;
  /** @minLength 1 */
  content: string;
  created_at: string;
  is_best: boolean;
  /**
   * @minLength 1
   * @maxLength 100
   */
  user_name: string;
  /** @minLength 1 */
  user_thumbnail_url: string;
  /**
   * @minimum -2147483648
   * @maximum 2147483647
   */
  user_uid: number;
  series: number;
  episode: number;
}

export interface Series {
  /**
   * @minimum -2147483648
   * @maximum 2147483647
   */
  id: number;
  /**
   * @minLength 1
   * @maxLength 100
   */
  title: string;
  /** @minLength 1 */
  image_src: string;
  user: number;
}

export interface SeriesCreate {
  id: number;
}

export type EpisodeCreateResponseErrorsItemsItem = {[key: string]: string | null};

export interface EpisodeCreateResponse {
  created_data: Episode[];
  errors_items: EpisodeCreateResponseErrorsItemsItem[];
}

export interface CommentEmotionAnalysis {
  readonly id?: number;
  /** @minLength 1 */
  readonly content?: string;
  /** @minLength 1 */
  readonly sentiment?: string;
  readonly created_at?: string;
  comment: number;
}

export interface TokenObtainPair {
  /** @minLength 1 */
  username: string;
  /** @minLength 1 */
  password: string;
}

export interface CustomTokenObtainPair {
  /** @minLength 1 */
  access: string;
  /** @minLength 1 */
  refresh: string;
}

export interface TokenRefresh {
  /** @minLength 1 */
  refresh: string;
  /** @minLength 1 */
  readonly access?: string;
}

export interface CustomUser {
  /**
   * @minLength 1
   * @maxLength 15
   */
  username: string;
  /** @maxLength 254 */
  email?: string;
  /**
   * @minLength 1
   * @maxLength 30
   */
  name: string;
}

export type CrawlerEpisodeCommentListParams = {
/**
 * Number of results to return per page.
 */
limit?: number;
/**
 * The initial index from which to return the results.
 */
offset?: number;
/**
 * 불러올 필드 이름을 쉼표로 구분하여 지정 (예: id,name,image_src)
 */
fields?: string;
};

export type CrawlerEpisodeCommentList200 = {
  count: number;
  /** @nullable */
  next?: string | null;
  /** @nullable */
  previous?: string | null;
  results: Comment[];
};

export type CrawlerSeriesListParams = {
/**
 * Number of results to return per page.
 */
limit?: number;
/**
 * The initial index from which to return the results.
 */
offset?: number;
/**
 * 불러올 필드 이름을 쉼표로 구분하여 지정 (예: id,name,image_src)
 */
fields?: string;
};

export type CrawlerSeriesEpisodeListParams = {
/**
 * Number of results to return per page.
 */
limit?: number;
/**
 * The initial index from which to return the results.
 */
offset?: number;
/**
 * 불러올 필드 이름을 쉼표로 구분하여 지정 (예: id,name,image_src)
 */
fields?: string;
};

export type CrawlerSeriesEpisodeList200 = {
  count: number;
  /** @nullable */
  next?: string | null;
  /** @nullable */
  previous?: string | null;
  results: Episode[];
};

